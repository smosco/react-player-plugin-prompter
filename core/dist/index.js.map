{
  "version": 3,
  "sources": ["esbuild-scss-modules-plugin:./ReactScriptPlayer.module.scss", "../src/components/LineView.tsx", "../src/components/TextDisplay.tsx", "../src/components/BlockView.tsx", "../src/utils/convertTime.ts", "../src/utils/findCurrentScriptIndex.ts", "../src/components/ReactScriptPlayer.tsx"],
  "sourcesContent": ["\nconst digest = '9b88b24bc5ba973e3b88f2c5f7446f6da86e199e8003f6a24f080d5601160c50';\nconst classes = {\"scriptsContainer\":\"_scriptsContainer_1tyea_7\",\"title\":\"_title_1tyea_18\",\"lineViewContainer\":\"_lineViewContainer_1tyea_23\",\"skipButtonContainer\":\"_skipButtonContainer_1tyea_28\",\"blockViewContainer\":\"_blockViewContainer_1tyea_35\",\"scriptItem\":\"_scriptItem_1tyea_42\",\"timeButton\":\"_timeButton_1tyea_47\",\"textView\":\"_textView_1tyea_60\",\"highlighted\":\"_highlighted_1tyea_65\"};\nconst css = `* {\n  box-sizing: border-box;\n  margin: 0;\n  padding: 0;\n}\n\n._scriptsContainer_1tyea_7 {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 100%;\n  height: auto;\n  padding: 1.5rem;\n  border: 2px solid #ececec;\n  border-radius: 0.75rem;\n}\n\n._title_1tyea_18 {\n  font-size: 1.25rem;\n  font-weight: 700;\n}\n\n._lineViewContainer_1tyea_23 {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n._lineViewContainer_1tyea_23 ._skipButtonContainer_1tyea_28 {\n  align-self: end;\n}\n._lineViewContainer_1tyea_23 ._skipButtonContainer_1tyea_28 button {\n  cursor: pointer;\n}\n\n._blockViewContainer_1tyea_35 {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  height: 16rem;\n  overflow-y: auto;\n}\n._blockViewContainer_1tyea_35 ._scriptItem_1tyea_42 {\n  padding: 16px;\n  border-radius: 12px;\n  transition: background-color 0.5s ease-in-out;\n}\n._blockViewContainer_1tyea_35 ._scriptItem_1tyea_42 ._timeButton_1tyea_47 {\n  width: 5rem;\n  padding-inline: 0.75rem;\n  padding-block: 0.5rem;\n  margin-bottom: 0.5rem;\n  border: none;\n  border-radius: 9999px;\n  background-color: gray;\n  cursor: pointer;\n  font-size: 0.75rem;\n  color: white;\n}\n\n._textView_1tyea_60 {\n  display: flex;\n  flex-direction: column;\n  gap: 1rem;\n}\n._textView_1tyea_60._highlighted_1tyea_65 {\n  background-color: #fef08a;\n}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "import React from 'react';\nimport { LanguageCode, Script, TextStyle } from '../interfaces/Scripts';\nimport arrow_back from '../assets/icons/arrow_back.svg';\nimport arrow_forward from '../assets/icons/arrow_forward.svg';\nimport { TextDisplay } from './TextDisplay';\nimport styles from './ReactScriptPlayer.module.scss';\n\n// LineView\uC5D0 \uC81C\uB124\uB9AD T \uCD94\uAC00\ninterface LineViewProps<T extends string = LanguageCode> {\n  scripts: Script<T>[];\n  selectedLanguages: T[];\n  currentScriptIndex: number;\n  seekTo: (timeInSeconds: number) => void;\n  onSelectWord: (word: string, script: Script<T>, index: number) => void;\n  textStyle?: TextStyle;\n  PrevButton?: JSX.Element;\n  NextButton?: JSX.Element;\n}\n\n// LineView \uCEF4\uD3EC\uB10C\uD2B8\uC5D0 \uC81C\uB124\uB9AD T\uB97C \uC801\uC6A9\nexport function LineView<T extends string = LanguageCode>({\n  scripts,\n  selectedLanguages,\n  currentScriptIndex,\n  seekTo,\n  onSelectWord,\n  textStyle,\n  PrevButton,\n  NextButton,\n}: LineViewProps<T>) {\n  const handlePrevious = () => {\n    const prevIndex = Math.max(0, currentScriptIndex - 1); // \uCD5C\uC18C 0\n    // console.log('Previous Index:', prevIndex);\n    seekTo(scripts[prevIndex].startTimeInSecond); // \uC774\uC804 \uC790\uB9C9\uC73C\uB85C \uC774\uB3D9\n  };\n\n  const handleNext = () => {\n    const nextIndex = Math.min(scripts.length - 1, currentScriptIndex + 1);\n    // console.log('Next Index:', nextIndex);\n    seekTo(scripts[nextIndex].startTimeInSecond);\n  };\n\n  return (\n    <div className={styles.lineViewContainer}>\n      <div className={styles.skipButtonContainer}>\n        {PrevButton ? (\n          React.cloneElement(PrevButton, { onClick: handlePrevious })\n        ) : (\n          <button onClick={handlePrevious}>\n            <img src={arrow_back} alt=\"Back Arrow\" />\n          </button>\n        )}\n\n        {NextButton ? (\n          React.cloneElement(NextButton, { onClick: handleNext })\n        ) : (\n          <button onClick={handleNext}>\n            <img src={arrow_forward} alt=\"Forward Arrow\" />\n          </button>\n        )}\n      </div>\n\n      {/* TextDisplay\uC5D0\uC11C \uD604\uC7AC \uC790\uB9C9\uACFC \uC120\uD0DD\uB41C \uC5B8\uC5B4\uB97C \uD45C\uC2DC */}\n      {scripts[currentScriptIndex] && (\n        <TextDisplay\n          script={scripts[currentScriptIndex]}\n          selectedLanguages={selectedLanguages}\n          onSelectWord={onSelectWord}\n          textStyle={textStyle}\n        />\n      )}\n    </div>\n  );\n}\n", "import React from 'react';\nimport { Script, LanguageCode, TextStyle } from '../interfaces/Scripts';\nimport styles from './ReactScriptPlayer.module.scss';\n\n// TextDisplay\uC5D0 \uC81C\uB124\uB9AD T \uCD94\uAC00\ninterface TextDisplayProps<T extends string = LanguageCode> {\n  script: Script<T>;\n  selectedLanguages: T[];\n  onSelectWord: (word: string, script: Script<T>, index: number) => void;\n  textStyle?: TextStyle;\n}\n\n// TextDisplay\uC5D0 \uC81C\uB124\uB9AD T \uC801\uC6A9\nexport function TextDisplay<T extends string = LanguageCode>({\n  script,\n  selectedLanguages,\n  onSelectWord,\n  textStyle,\n}: TextDisplayProps<T>) {\n  return (\n    <div\n      className={`${styles.textView} ${script.isHighlighted ? styles.highlighted : ''}`}\n    >\n      {selectedLanguages.map((language) => (\n        <p\n          key={language}\n          className={styles.text}\n          style={textStyle}\n          onMouseUp={() => {\n            const selection = window.getSelection();\n            if (selection && selection.toString()) {\n              const selectedWord = selection.toString().trim();\n              if (selectedWord) {\n                onSelectWord(selectedWord, script, 0);\n              }\n            }\n          }}\n        >\n          {script[language] || `(${language} \uC790\uB9C9\uC774 \uC5C6\uC5B4\uC694!)`}\n        </p>\n      ))}\n    </div>\n  );\n}\n", "import React, { useRef, useEffect, useState } from 'react';\nimport { LanguageCode, Script, TimeStyle, TextStyle } from 'interfaces/Scripts';\nimport styles from './ReactScriptPlayer.module.scss';\nimport { convertTime } from 'utils/convertTime';\nimport { TextDisplay } from './TextDisplay';\n\ninterface BlockViewProps<T extends string = LanguageCode> {\n  scripts: Script<T>[];\n  currentScriptIndex: number;\n  selectedLanguages: T[];\n  seekTo: (timeInSeconds: number) => void;\n  onClickScript: (script: Script<T>, index: number) => void;\n  onSelectWord: (word: string, script: Script<T>, index: number) => void;\n  timeStyle?: TimeStyle;\n  textStyle?: TextStyle;\n  FocusButton?: ({\n    isFocused,\n    setIsFocused,\n  }: {\n    isFocused: boolean;\n    setIsFocused: React.Dispatch<React.SetStateAction<boolean>>;\n  }) => JSX.Element;\n}\n\nexport function BlockView<T extends string = LanguageCode>({\n  scripts,\n  currentScriptIndex,\n  selectedLanguages,\n  seekTo,\n  onClickScript,\n  onSelectWord,\n  timeStyle,\n  textStyle,\n  FocusButton,\n}: BlockViewProps<T>) {\n  const containerRef = useRef<HTMLDivElement>(null);\n  const [isFocused, setIsFocused] = useState(true);\n\n  useEffect(() => {\n    const handleInteraction = () => {\n      setIsFocused(false);\n    };\n\n    const container = containerRef.current;\n    if (container) {\n      container.addEventListener('wheel', handleInteraction);\n      container.addEventListener('touchmove', handleInteraction);\n    }\n\n    return () => {\n      if (container) {\n        container.removeEventListener('wheel', handleInteraction);\n        container.removeEventListener('touchmove', handleInteraction);\n      }\n    };\n  }, []);\n\n  useEffect(() => {\n    if (containerRef.current && isFocused) {\n      if (currentScriptIndex < containerRef.current.children.length - 1) {\n        const container = containerRef.current;\n        const target = container.children[currentScriptIndex];\n        const targetTop = target.getBoundingClientRect().top;\n        const containerTop = container.getBoundingClientRect().top;\n        const relativeTop = targetTop - containerTop;\n\n        container.scrollBy({\n          top: relativeTop - 20,\n          behavior: 'smooth',\n        });\n      }\n    }\n  }, [currentScriptIndex, isFocused]);\n\n  return (\n    <div className={styles.blockViewContainer}>\n      {FocusButton &&\n        // TODO(@smosco): \uBB58 \uBC14\uAFE8\uB294\uC9C0 cloneElement\uB97C \uC0AC\uC6A9\uD558\uC9C0 \uC54A\uC73C\uBA74 \uD074\uB9AD\uC774 \uC548\uB428\n        React.cloneElement(FocusButton({ isFocused, setIsFocused }), {\n          onClick: () => setIsFocused(!isFocused),\n        })}\n      <div ref={containerRef} className={styles.blockViewContainer}>\n        {scripts.map((script, index) => (\n          <div\n            className={styles.scriptItem}\n            key={index}\n            onClick={() => {\n              seekTo(script.startTimeInSecond);\n              onClickScript(script, index);\n            }}\n            style={{\n              backgroundColor:\n                index === currentScriptIndex\n                  ? textStyle?.activeColor || 'lightgray'\n                  : 'transparent',\n            }}\n          >\n            <button\n              className={styles.timeButton}\n              style={{\n                color: timeStyle?.color,\n                fontSize: timeStyle?.fontSize,\n                backgroundColor: timeStyle?.backgroundColor,\n                borderRadius: timeStyle?.borderRadius,\n                padding: timeStyle?.padding,\n              }}\n            >\n              {convertTime(script.startTimeInSecond)}\n            </button>\n\n            <TextDisplay\n              script={scripts[index]}\n              selectedLanguages={selectedLanguages}\n              onSelectWord={onSelectWord}\n              textStyle={textStyle}\n            />\n          </div>\n        ))}\n      </div>\n    </div>\n  );\n}\n", "export function convertTime(seconds: number) {\n  // \uBD84\uACFC \uCD08\uB85C \uB098\uB214\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n\n  // \uB450 \uC790\uB9BF\uC218\uB85C \uB9DE\uCD94\uAE30\n  const paddedMinutes = String(minutes).padStart(2, '0');\n  const paddedSeconds = String(remainingSeconds).padStart(2, '0');\n\n  return `${paddedMinutes}:${paddedSeconds}`;\n}\n", "import { Script } from 'interfaces/Scripts';\n\nexport function findCurrentScriptIndex(\n  scripts: Script[],\n  currentTime: number,\n): number {\n  let left = 0;\n  let right = scripts.length - 1;\n\n  while (left <= right) {\n    const mid = Math.floor((left + right) / 2);\n    const script = scripts[mid];\n\n    if (\n      currentTime >= script.startTimeInSecond &&\n      currentTime < script.startTimeInSecond + script.durationInSecond\n    ) {\n      return mid;\n    } else if (currentTime < script.startTimeInSecond) {\n      right = mid - 1;\n    } else {\n      left = mid + 1;\n    }\n  }\n\n  return left; // \uAC00\uC7A5 \uAC00\uAE4C\uC6B4 \uB2E4\uC74C \uC790\uB9C9 \uC778\uB371\uC2A4 \uBC18\uD658\n}\n", "import React from 'react';\nimport styles from './ReactScriptPlayer.module.scss';\nimport {\n  LanguageCode,\n  Script,\n  ContainerStyle,\n  TextStyle,\n  TimeStyle,\n} from '../interfaces/Scripts';\nimport { Dispatch, SetStateAction } from 'react';\nimport { LineView } from './LineView';\nimport { BlockView } from './BlockView';\nimport { findCurrentScriptIndex } from 'utils/findCurrentScriptIndex';\nexport interface ReactScriptPlayerProps<T extends string = LanguageCode> {\n  mode: 'line' | 'block';\n  scripts: Script<T>[];\n  selectedLanguages: T[];\n  seekTo: (timeInSeconds: number) => void;\n  getCurrentTime: () => number;\n  onClickScript: (script: Script<T>, index: number) => void;\n  onSelectWord: (word: string, script: Script<T>, index: number) => void;\n  containerStyle?: ContainerStyle;\n  textStyle?: TextStyle;\n  timeStyle?: TimeStyle;\n  PrevButton?: JSX.Element;\n  NextButton?: JSX.Element;\n  FocusButton?: ({\n    isFocused,\n    setIsFocused,\n  }: {\n    isFocused: boolean;\n    setIsFocused: Dispatch<SetStateAction<boolean>>;\n  }) => JSX.Element;\n}\n\nexport function ReactScriptPlayer<T extends string = LanguageCode>({\n  mode,\n  scripts,\n  selectedLanguages,\n  seekTo,\n  getCurrentTime,\n  onClickScript,\n  onSelectWord,\n  containerStyle,\n  textStyle,\n  timeStyle,\n  PrevButton,\n  NextButton,\n  FocusButton,\n}: ReactScriptPlayerProps<T>) {\n  const currentTime = getCurrentTime();\n  const currentScriptIndex = findCurrentScriptIndex(scripts, currentTime) ?? 0;\n\n  const handleClickScript = (script: Script<T>, index: number) => {\n    onClickScript(script, index);\n  };\n\n  const scriptPlayerProps = {\n    scripts,\n    currentScriptIndex,\n    selectedLanguages,\n    seekTo,\n    onSelectWord,\n    textStyle,\n    PrevButton,\n    NextButton,\n  };\n\n  return (\n    <div className={styles.scriptsContainer} style={{ ...containerStyle }}>\n      <div className={styles.displayContainer}>\n        <p className={styles.title}>Transcript</p>\n        {mode === 'line' ? (\n          <LineView {...scriptPlayerProps} textStyle={textStyle} />\n        ) : (\n          <BlockView\n            {...scriptPlayerProps}\n            FocusButton={FocusButton}\n            onClickScript={handleClickScript}\n            timeStyle={timeStyle}\n            textStyle={textStyle}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n"],
  "mappings": "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",
  "names": ["jsx", "React", "jsx", "jsxs", "React", "jsx", "jsxs"]
}
