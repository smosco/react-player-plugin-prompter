{
  "version": 3,
  "sources": ["../src/components/Button.tsx", "../src/components/ReactScriptPlayer.tsx", "esbuild-scss-modules-plugin:./ReactScriptPlayer.module.scss", "../src/components/TextDisplay.tsx", "../src/components/LineView.tsx", "../src/components/BlockView.tsx", "../src/utils/convertTime.ts"],
  "sourcesContent": ["import React from 'react';\n\ninterface ButtonProps {\n  label: string;\n  onClick: () => void;\n}\n\nexport function Button({ label, onClick }: ButtonProps) {\n  return <button onClick={onClick}>{label}</button>;\n}\n", "import React, { useMemo } from 'react';\nimport styles from './ReactScriptPlayer.module.scss';\nimport { LanguageCode, Subtitle } from '../interfaces/Scripts';\nimport { LineView } from './LineView';\nimport { BlockView } from './BlockView';\n\nexport interface ReactScriptPlayerProps {\n  mode: 'line' | 'block';\n  subtitles: Subtitle[];\n  selectedLanguages: LanguageCode[];\n  seekTo: (timeInSeconds: number) => void;\n  currentTime: number;\n  onClickSubtitle: (subtitle: Subtitle, index: number) => void;\n  onSelectWord: (word: string, subtitle: Subtitle, index: number) => void;\n}\n\nexport function ReactScriptPlayer({\n  mode,\n  subtitles,\n  selectedLanguages,\n  seekTo,\n  currentTime,\n  onClickSubtitle,\n  onSelectWord,\n}: ReactScriptPlayerProps) {\n  const reversedSubtitles = useMemo(\n    () => [...subtitles].reverse(),\n    [subtitles],\n  );\n  const currentSubtitleIndex = useMemo(() => {\n    const index = reversedSubtitles.findIndex(\n      (subtitle) => subtitle.startTimeInSecond < currentTime,\n    );\n    return reversedSubtitles.length - 1 - index;\n  }, [reversedSubtitles, currentTime]);\n\n  // console.log(\n  //   'index',\n  //   currentSubtitleIndex,\n  //   subtitles.length - 1 - currentSubtitleIndex,\n  // );\n  return (\n    <div className={styles.subtitleContainer}>\n      <div className={styles.displayContainer}>\n        {mode === 'line' && (\n          <LineView\n            subtitles={subtitles}\n            currentSubtitleIndex={currentSubtitleIndex}\n            selectedLanguages={selectedLanguages}\n            seekTo={seekTo}\n            onSelectWord={onSelectWord}\n          />\n        )}\n        {mode === 'block' && (\n          <BlockView\n            subtitles={subtitles}\n            currentSubtitleIndex={currentSubtitleIndex}\n            selectedLanguages={selectedLanguages}\n            seekTo={seekTo}\n            onClickSubtitle={onClickSubtitle}\n            onSelectWord={onSelectWord}\n          />\n        )}\n      </div>\n    </div>\n  );\n}\n", "\nconst digest = 'b76a105b8a0b6eeffc7bc8b1b704ee3826628f41851fcc5ed4e3cf129ccf28e4';\nconst classes = {\"subtitleContainer\":\"_subtitleContainer_1xoeq_1\",\"lineViewContainer\":\"_lineViewContainer_1xoeq_14\",\"skipButtonContainer\":\"_skipButtonContainer_1xoeq_19\",\"blockViewContainer\":\"_blockViewContainer_1xoeq_26\"};\nconst css = `._subtitleContainer_1xoeq_1 {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n  width: 90%;\n  max-width: 590px;\n  height: 16rem;\n  padding: 1.5rem;\n  border: 2px solid #e3e3e3;\n  border-radius: 0.5rem;\n  overflow-y: auto;\n}\n\n._lineViewContainer_1xoeq_14 {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n._lineViewContainer_1xoeq_14 ._skipButtonContainer_1xoeq_19 {\n  align-self: end;\n}\n._lineViewContainer_1xoeq_14 ._skipButtonContainer_1xoeq_19 button {\n  cursor: pointer;\n}\n\n._blockViewContainer_1xoeq_26 {\n  display: flex;\n  flex-direction: column;\n  gap: 2rem;\n}\n._blockViewContainer_1xoeq_26 button {\n  width: 5rem;\n  padding: 8px 12px;\n  border: none;\n  border-radius: 5rem;\n  background-color: #ececec;\n  cursor: pointer;\n  font-size: 0.8rem;\n  color: #5a5a5a;\n}`;\n\n(function() {\n  if (typeof document !== \"undefined\" && !document.getElementById(digest)) {\n    var ele = document.createElement('style');\n    ele.id = digest;\n    ele.textContent = css;\n    document.head.appendChild(ele);\n  }\n})();\n\nexport default classes;\nexport { css, digest, classes };\n  ", "import React from 'react';\nimport { Subtitle, LanguageCode } from '../interfaces/Scripts';\nimport styles from './ReactScriptPlayer.module.scss';\n\nexport function TextDisplay({\n  subtitle,\n  selectedLanguages,\n  onSelectWord,\n}: {\n  subtitle: Subtitle;\n  selectedLanguages: LanguageCode[]; // \uC120\uD0DD\uB41C \uC5B8\uC5B4 \uBC30\uC5F4\n  onSelectWord: (word: string, subtitle: Subtitle, index: number) => void;\n}) {\n  return (\n    <div className={styles.textView}>\n      {selectedLanguages.map((language) => (\n        <p\n          key={language}\n          className={styles[`text${language.toUpperCase()}`]}\n          onMouseUp={() => {\n            const selection = window.getSelection();\n            if (selection && selection.toString()) {\n              const selectedWord = selection.toString().trim();\n              if (selectedWord) {\n                // TODO(@smosco): \uBB38\uC7A5\uC758 index, \uBB38\uC7A5 \uB0B4 \uB2E8\uC5B4\uC758 index\uAE4C\uC9C0 \uB118\uACA8\uC57C\uD560\uC9C0 \uACE0\uBBFC\n                onSelectWord(selectedWord, subtitle, 0);\n              }\n            }\n          }}\n        >\n          {subtitle[language] || `(${language} \uC790\uB9C9\uC774 \uC5C6\uC5B4\uC694!)`}\n          {/* \uC120\uD0DD\uB41C \uC5B8\uC5B4\uAC00 \uC5C6\uC744 \uACBD\uC6B0 \uB300\uBE44 */}\n        </p>\n      ))}\n    </div>\n  );\n}\n", "import React from 'react';\nimport { LanguageCode, Subtitle } from '../interfaces/Scripts';\n// import { useState } from 'react';\nimport arrow_back from '../assets/icons/arrow_back.svg';\nimport arrow_forward from '../assets/icons/arrow_forward.svg';\nimport { TextDisplay } from './TextDisplay';\nimport styles from './ReactScriptPlayer.module.scss';\n\ninterface LineViewProps {\n  subtitles: Subtitle[];\n  selectedLanguages: LanguageCode[];\n  currentSubtitleIndex: number;\n  seekTo: (timeInSeconds: number) => void;\n  onSelectWord: (word: string, subtitle: Subtitle, index: number) => void;\n}\n\nexport function LineView({\n  subtitles,\n  selectedLanguages,\n  currentSubtitleIndex,\n  seekTo,\n  onSelectWord,\n}: LineViewProps) {\n  // const [currentSubtitleIndex, setCurrentSubtitleIndex] = useState(0);\n  const totalSubtitles = subtitles.length;\n\n  const handlePrevious = () => {\n    if (currentSubtitleIndex > 0) {\n      seekTo(subtitles[currentSubtitleIndex - 1].startTimeInSecond);\n      // setCurrentSubtitleIndex((prev) => prev - 1);\n    }\n  };\n\n  const handleNext = () => {\n    if (currentSubtitleIndex < totalSubtitles - 1) {\n      seekTo(subtitles[currentSubtitleIndex + 1].startTimeInSecond);\n      // setCurrentSubtitleIndex((prev) => prev + 1);\n    }\n  };\n\n  return (\n    <div className={styles.lineViewContainer}>\n      <div className={styles.skipButtonContainer}>\n        <button onClick={handlePrevious}>\n          <img src={arrow_back} alt=\"Back Arrow\" />\n        </button>\n        <button onClick={handleNext}>\n          <img src={arrow_forward} alt=\"Forward Arrow\" />\n        </button>\n      </div>\n      {/* TextDisplay\uC5D0\uC11C \uD604\uC7AC \uC790\uB9C9\uACFC \uC120\uD0DD\uB41C \uC5B8\uC5B4\uB97C \uD45C\uC2DC */}\n      {subtitles[currentSubtitleIndex] && (\n        // TODO:\uC790\uB9C9 \uD504\uB85C\uADF8\uB808\uC2A4\uBC14\n        <TextDisplay\n          subtitle={subtitles[currentSubtitleIndex]}\n          selectedLanguages={selectedLanguages}\n          onSelectWord={onSelectWord}\n        />\n      )}\n    </div>\n  );\n}\n", "import React, { useRef, useEffect } from 'react';\nimport { LanguageCode, Subtitle } from 'interfaces/Scripts';\nimport styles from './ReactScriptPlayer.module.scss';\nimport { convertTime } from 'utils/convertTime';\nimport { TextDisplay } from './TextDisplay';\n\ninterface BlockViewProps {\n  subtitles: Subtitle[];\n  currentSubtitleIndex: number;\n  selectedLanguages: LanguageCode[]; // \uC120\uD0DD\uB41C \uC5B8\uC5B4 \uBC30\uC5F4\n  seekTo: (timeInSeconds: number) => void;\n  onClickSubtitle: (subtitle: Subtitle, index: number) => void;\n  onSelectWord: (word: string, subtitle: Subtitle, index: number) => void;\n}\n// TODO: \uACF5\uD1B5 PROPS \uCD94\uCD9C\n\nexport function BlockView({\n  subtitles,\n  currentSubtitleIndex,\n  selectedLanguages,\n  seekTo,\n  onClickSubtitle,\n  onSelectWord,\n}: BlockViewProps) {\n  const containerRef = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (containerRef.current) {\n      if (currentSubtitleIndex < containerRef.current.children.length - 1) {\n        containerRef.current.children[currentSubtitleIndex].scrollIntoView({\n          block: 'center',\n          behavior: 'smooth',\n        });\n      }\n    }\n  }, [currentSubtitleIndex]);\n\n  return (\n    <div ref={containerRef} className={styles.blockViewContainer}>\n      {subtitles.map((subtitle, index) => (\n        <div\n          key={index}\n          onClick={() => {\n            // TODO(@smosco): \uC790\uB9C9 \uD074\uB9AD \uD568\uC218 \uAD6C\uD604\n            seekTo(subtitle.startTimeInSecond);\n            onClickSubtitle(subtitle, index);\n          }}\n          style={{\n            padding: '16px',\n            borderRadius: '12px',\n            transition: 'background-color 0.5s ease-in-out',\n            ...(index === currentSubtitleIndex && {\n              backgroundColor: 'lightgray',\n            }),\n          }}\n        >\n          <button>{convertTime(subtitle.startTimeInSecond)}</button>\n\n          <TextDisplay\n            subtitle={subtitles[index]}\n            selectedLanguages={selectedLanguages}\n            onSelectWord={onSelectWord}\n          />\n        </div>\n      ))}\n    </div>\n  );\n}\n", "export function convertTime(seconds: number) {\n  // \uBD84\uACFC \uCD08\uB85C \uB098\uB214\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = Math.floor(seconds % 60);\n\n  // \uB450 \uC790\uB9BF\uC218\uB85C \uB9DE\uCD94\uAE30\n  const paddedMinutes = String(minutes).padStart(2, '0');\n  const paddedSeconds = String(remainingSeconds).padStart(2, '0');\n\n  return `${paddedMinutes}:${paddedSeconds}`;\n}\n"],
  "mappings": "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",
  "names": ["jsx", "jsx", "jsx", "jsxs", "jsx", "jsxs"]
}
